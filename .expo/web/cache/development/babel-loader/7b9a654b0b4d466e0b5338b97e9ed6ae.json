{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/eye-slash98/Documents/react-native/expo/native-app-4/screens/GameScreen.js\";\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport Card from \"../components/Card\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nvar GameScreen = function GameScreen(props) {\n  var _useState = useState(generateRandomBetween(1, 100, props.userChoice)),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rounds = _useState4[0],\n      setRounds = _useState4[1];\n\n  var currentLow = useRef(1);\n  var currentHigh = useRef(100);\n  useEffect(function () {\n    if (currentGuess === props.userChoice) {\n      props.onGameOver(rounds);\n    }\n  });\n\n  var nextGuessHandler = function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < props.userChoice || direction === 'greater' && currentGuess > props.userChoice) {\n      Alert.alert(\"Dont't lie!\", 'You know that this wrong...', [{\n        text: 'Sorry!',\n        style: 'cancel'\n      }]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess;\n    }\n\n    var nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n    setCurrentGuess(nextNumber);\n    setRounds(curRounds);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Opponent's Guess\"), React.createElement(NumberContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, currentGuess), React.createElement(Card, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"LOWER\",\n    onPress: nextGuessHandler.bind(_this, 'lower'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"GREATER\",\n    onPress: nextGuessHandler.bind(_this, 'greater'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 20,\n    width: 300,\n    height: 75,\n    maxWidth: '80%'\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["/home/eye-slash98/Documents/react-native/expo/native-app-4/screens/GameScreen.js"],"names":["React","useState","useRef","useEffect","NumberContainer","Card","generateRandomBetween","min","max","exclude","Math","ceil","floor","rndNum","random","GameScreen","props","userChoice","currentGuess","setCurrentGuess","rounds","setRounds","currentLow","currentHigh","onGameOver","nextGuessHandler","direction","Alert","alert","text","style","current","nextNumber","curRounds","styles","screen","buttonContainer","bind","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","width","height","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  Alert\n} from 'react-native';\nimport NumberContainer from '../components/NumberContainer';\nimport Card from '../components/Card';\n\nconst generateRandomBetween = (min, max, exclude) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nconst GameScreen = props => {\n  const [currentGuess, setCurrentGuess] = useState(generateRandomBetween(1, 100, props.userChoice));\n  const [rounds, setRounds] = useState(0);\n  const currentLow = useRef(1);\n  const currentHigh = useRef(100);\n\n  useEffect(() => {\n    if(currentGuess === props.userChoice){\n      props.onGameOver(rounds);\n    }\n  });\n\n  const nextGuessHandler = direction => {\n    if ((direction === 'lower' && currentGuess < props.userChoice) ||\n      (direction === 'greater' && currentGuess > props.userChoice)) {\n      Alert.alert(\"Dont't lie!\", 'You know that this wrong...', [{ text: 'Sorry!', style: 'cancel' }]);\n      return;\n    }\n    if (direction === 'lower') {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess;\n    }\n    const nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n    setCurrentGuess(nextNumber);\n    setRounds(curRounds)\n  };\n\n  return (\n    <View style={styles.screen}>\n      <Text>Opponent's Guess</Text>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card style={styles.buttonContainer}>\n        <Button title=\"LOWER\" onPress={nextGuessHandler.bind(this, 'lower')} />\n        <Button title=\"GREATER\" onPress={nextGuessHandler.bind(this, 'greater')} />\n      </Card>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 20,\n    width: 300,\n    height: 75,\n    maxWidth: '80%'\n  }\n});\n\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}