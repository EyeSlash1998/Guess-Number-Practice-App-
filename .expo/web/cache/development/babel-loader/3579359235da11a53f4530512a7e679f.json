{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/eye-slash98/Documents/react-native/expo/native-app-4/screens/StartGameScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/colors\";\nimport Input from \"../components/Input\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedValue = _useState6[0],\n      setSelectedValue = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue('');\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (chosenNumber === NaN || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid Input', 'Number has to be between 1 and 99.', []);\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedValue(chosenNumber);\n    setEnteredValue('');\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, \"Chosen Number: \", selectedValue);\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Start a New Game!\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    style: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    keyboardType: \"numeric\",\n    maxLength: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  })))), confirmedOutput);\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    height: 150,\n    maxWidth: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 25,\n    paddingVertical: 20\n  },\n  button: {\n    width: '40%'\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["/home/eye-slash98/Documents/react-native/expo/native-app-4/screens/StartGameScreen.js"],"names":["React","useState","Card","Colors","Input","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedValue","setSelectedValue","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","NaN","Alert","alert","confirmedOutput","styles","screen","title","inputContainer","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","padding","alignItems","justifyContent","fontSize","marginVertical","width","height","maxWidth","flexDirection","paddingHorizontal","paddingVertical","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Button,\n  TouchableWithoutFeedback,\n  Alert,\n  Keyboard //not a component but an api\n} from 'react-native';\n\nimport Card from '../components/Card';\nimport Colors from '../constants/colors';\nimport Input from '../components/Input';\n\nconst StartGameScreen = props => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [confirmed, setConfirmed] = useState(false);\n  const [selectedValue, setSelectedValue] = useState()\n\n  const numberInputHandler = inputText => {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''))\n  };\n\n  const resetInputHandler = () => {\n    setEnteredValue('');\n    setConfirmed(false);\n  };\n\n  const confirmInputHandler = () => {\n    const chosenNumber = parseInt(enteredValue);\n    if(chosenNumber === NaN || chosenNumber <= 0 || chosenNumber > 99){\n      Alert.alert('Invalid Input','Number has to be between 1 and 99.', [])\n      return;\n    }\n    setConfirmed(true);\n    setSelectedValue(chosenNumber)\n    setEnteredValue('');\n  };\n\n  let confirmedOutput;\n\n  if(confirmed) {\n    confirmedOutput = <Text>Chosen Number: {selectedValue}</Text>\n  }\n\n  return (\n    // <TouchableWithoutFeedback\n    //   onPress={() => {\n    //     Keyboard.dismiss;\n    //   }}>\n      <View style={styles.screen}>\n        <Text style={styles.title}>Start a New Game!</Text>\n        <Card style={styles.inputContainer}>\n          <Text>Select a Number</Text>\n          <Input style={styles.input}\n            blurOnSubmit\n            autoCapitalize='none'\n            autoCorrect={false}\n            keyboardType=\"numeric\"\n            maxLength={2}\n            onChangeText={numberInputHandler}\n            value={enteredValue}\n          />\n          <View style={styles.buttonContainer}>\n            <View style={styles.button}>\n              <Button title=\"Reset\" onPress={resetInputHandler} color={Colors.accent} />\n            </View>\n            <View style={styles.button}>\n              <Button title=\"Confirm\" onPress={confirmInputHandler} color={Colors.primary} />\n            </View>\n          </View>\n        </Card>\n        {confirmedOutput}\n      </View>\n    // </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'flex-start' //this is default as main axis is vertical -from top to bottom\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    width: 300,\n    height: 150,\n    maxWidth: '80%',\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 25,\n    paddingVertical: 20\n  },\n  button: {\n    width: '40%'\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  }\n});\n\nexport default StartGameScreen;"]},"metadata":{},"sourceType":"module"}